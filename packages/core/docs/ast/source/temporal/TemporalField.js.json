{
  "type": "File",
  "start": 0,
  "end": 1105,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 25,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1105,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ExportNamedDeclaration",
        "start": 1074,
        "end": 1103,
        "loc": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 29
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "ClassDeclaration",
          "start": 1081,
          "end": 1103,
          "loc": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 29
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1087,
            "end": 1100,
            "loc": {
              "start": {
                "line": 24,
                "column": 13
              },
              "end": {
                "line": 24,
                "column": 26
              },
              "identifierName": "TemporalField"
            },
            "name": "TemporalField",
            "leadingComments": null
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 1101,
            "end": 1103,
            "loc": {
              "start": {
                "line": 24,
                "column": 27
              },
              "end": {
                "line": 24,
                "column": 29
              }
            },
            "body": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\r\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\r\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\r\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\r\n ",
              "start": 0,
              "end": 232,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 0
                },
                "end": {
                  "line": 5,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\r\n * A field of date-time, such as month-of-year or hour-of-minute.\r\n *\r\n * Date and time is expressed using fields which partition the time-line into something\r\n * meaningful for humans. Implementations of this interface represent those fields.\r\n *\r\n * The most commonly used units are defined in {@link ChronoField}.\r\n * Further fields are supplied in {@link IsoFields}, {@link WeekFields} and {@link JulianFields}.\r\n * Fields can also be written by application code by implementing this interface.\r\n *\r\n * The field works using double dispatch. Client code calls methods on a date-time like\r\n * {@link LocalDateTime} which check if the field is a {@link ChronoField}.\r\n * If it is, then the date-time must handle it.\r\n * Otherwise, the method call is re-dispatched to the matching method in this interface.\r\n *\r\n * @interface\r\n ",
              "start": 236,
              "end": 1072,
              "loc": {
                "start": {
                  "line": 7,
                  "column": 0
                },
                "end": {
                  "line": 23,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\r\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\r\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\r\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\r\n ",
            "start": 0,
            "end": 232,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\r\n * A field of date-time, such as month-of-year or hour-of-minute.\r\n *\r\n * Date and time is expressed using fields which partition the time-line into something\r\n * meaningful for humans. Implementations of this interface represent those fields.\r\n *\r\n * The most commonly used units are defined in {@link ChronoField}.\r\n * Further fields are supplied in {@link IsoFields}, {@link WeekFields} and {@link JulianFields}.\r\n * Fields can also be written by application code by implementing this interface.\r\n *\r\n * The field works using double dispatch. Client code calls methods on a date-time like\r\n * {@link LocalDateTime} which check if the field is a {@link ChronoField}.\r\n * If it is, then the date-time must handle it.\r\n * Otherwise, the method call is re-dispatched to the matching method in this interface.\r\n *\r\n * @interface\r\n ",
            "start": 236,
            "end": 1072,
            "loc": {
              "start": {
                "line": 7,
                "column": 0
              },
              "end": {
                "line": 23,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\r\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\r\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\r\n ",
      "start": 0,
      "end": 232,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n * A field of date-time, such as month-of-year or hour-of-minute.\r\n *\r\n * Date and time is expressed using fields which partition the time-line into something\r\n * meaningful for humans. Implementations of this interface represent those fields.\r\n *\r\n * The most commonly used units are defined in {@link ChronoField}.\r\n * Further fields are supplied in {@link IsoFields}, {@link WeekFields} and {@link JulianFields}.\r\n * Fields can also be written by application code by implementing this interface.\r\n *\r\n * The field works using double dispatch. Client code calls methods on a date-time like\r\n * {@link LocalDateTime} which check if the field is a {@link ChronoField}.\r\n * If it is, then the date-time must handle it.\r\n * Otherwise, the method call is re-dispatched to the matching method in this interface.\r\n *\r\n * @interface\r\n ",
      "start": 236,
      "end": 1072,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\r\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\r\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\r\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\r\n ",
      "start": 0,
      "end": 232,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\r\n * A field of date-time, such as month-of-year or hour-of-minute.\r\n *\r\n * Date and time is expressed using fields which partition the time-line into something\r\n * meaningful for humans. Implementations of this interface represent those fields.\r\n *\r\n * The most commonly used units are defined in {@link ChronoField}.\r\n * Further fields are supplied in {@link IsoFields}, {@link WeekFields} and {@link JulianFields}.\r\n * Fields can also be written by application code by implementing this interface.\r\n *\r\n * The field works using double dispatch. Client code calls methods on a date-time like\r\n * {@link LocalDateTime} which check if the field is a {@link ChronoField}.\r\n * If it is, then the date-time must handle it.\r\n * Otherwise, the method call is re-dispatched to the matching method in this interface.\r\n *\r\n * @interface\r\n ",
      "start": 236,
      "end": 1072,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1074,
      "end": 1080,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 1081,
      "end": 1086,
      "loc": {
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 24,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "TemporalField",
      "start": 1087,
      "end": 1100,
      "loc": {
        "start": {
          "line": 24,
          "column": 13
        },
        "end": {
          "line": 24,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1101,
      "end": 1102,
      "loc": {
        "start": {
          "line": 24,
          "column": 27
        },
        "end": {
          "line": 24,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1102,
      "end": 1103,
      "loc": {
        "start": {
          "line": 24,
          "column": 28
        },
        "end": {
          "line": 24,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1105,
      "end": 1105,
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 0
        }
      }
    }
  ]
}